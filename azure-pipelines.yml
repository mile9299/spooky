trigger:
  - master

variables:
  JUICE_SHOP_REPO: 'https://github.com/mile9299/spooky.git'
  DOCKER_PORT: 3000
  FALCON_CLIENT_ID: 'a2e099ba51a44ef8ac1fce8fc22d2f88'
  FALCON_CLIENT_SECRET: 'NU7ZwVbI49ruy1x0QHnO26CMlKLgAvYiGh3jF5R8'

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: BuildAndDeploy
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.0.0'
        displayName: 'Use Node.js 18.x'

      - checkout: self
        displayName: 'Checkout Repository'
        clean: true

      - script: |
          echo 'Building Docker image...'
          docker build -t spooky -f Dockerfile .
          echo 'Docker image built successfully!'
        displayName: 'Build Docker Image'

      - script: |
          echo 'Deploying application...'
          docker stop spooky || true
          docker rm spooky || true
          container_id=$(docker run -d -P --name spooky spooky)
          docker_host_port=$(docker port $container_id $(DOCKER_PORT) | cut -d ':' -f 2)
          echo "Spooky is running on http://localhost:${docker_host_port}"
        displayName: 'Deploy Application'

      - script: |
          echo 'Build, test, and deployment successful!'
        displayName: 'Success Message'
        condition: succeeded()

      - script: |
          echo 'Build, test, or deployment failed!'
        displayName: 'Failure Message'
        condition: failed()

  - job: ScanContainerImages
    displayName: 'Scan Container Images'
    steps:
      - checkout: self
        displayName: 'Checkout Repository'
        clean: true

      - script: |
          echo "Scanning container image with CrowdStrike..."
          docker pull docker.io/library/busybox
          curl -sSL -o /usr/local/bin/crowdstrike-scan https://raw.githubusercontent.com/CrowdStrike/container-image-scan-action/v1.1.0/entrypoint.sh
          chmod +x /usr/local/bin/crowdstrike-scan
          FALCON_CLIENT_ID=$(FALCON_CLIENT_ID) FALCON_CLIENT_SECRET=$(FALCON_CLIENT_SECRET) crowdstrike-scan
        displayName: 'CrowdStrike Container Image Scan'
        env:
          FALCON_CLIENT_ID: $(FALCON_CLIENT_ID)
          FALCON_CLIENT_SECRET: $(FALCON_CLIENT_SECRET)
